<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Random Walking Assets]]></title>
  <link href="http://chinux23.github.com/atom.xml" rel="self"/>
  <link href="http://chinux23.github.com/"/>
  <updated>2014-12-18T12:04:35-05:00</updated>
  <id>http://chinux23.github.com/</id>
  <author>
    <name><![CDATA[Chen Huang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[gift1]]></title>
    <link href="http://chinux23.github.com/blog/2014/12/18/gift1/"/>
    <updated>2014-12-18T11:58:00-05:00</updated>
    <id>http://chinux23.github.com/blog/2014/12/18/gift1</id>
    <content type="html"><![CDATA[<p>Problem can be found here <a href="http://cerberus.delosent.com:791/usacoprob2?a=MeRsP6R2hJO&amp;S=gift1">here</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> ID: chinux1</span>
</span><span class='line'><span class="cm"> PROG: gift1</span>
</span><span class='line'><span class="cm"> LANG: C++11</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;iostream&gt;</span>
</span><span class='line'><span class="cp">#include &lt;fstream&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string&gt;</span>
</span><span class='line'><span class="cp">#include &lt;vector&gt;</span>
</span><span class='line'><span class="cp">#include &lt;map&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">person</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">private</span><span class="o">:</span>
</span><span class='line'>    <span class="n">string</span> <span class="n">_name</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">long</span> <span class="n">_amount</span><span class="p">,</span> <span class="n">_initialAmount</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">person</span><span class="p">();</span>
</span><span class='line'>    <span class="n">person</span><span class="p">(</span><span class="n">string</span> <span class="n">name</span><span class="p">,</span> <span class="kt">long</span> <span class="n">money</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">give</span><span class="p">(</span><span class="n">person</span> <span class="o">&amp;</span> <span class="n">receiver</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">send</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;&amp;</span> <span class="n">list</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">setInitialAmount</span><span class="p">(</span><span class="k">const</span> <span class="kt">long</span> <span class="o">&amp;</span> <span class="n">money</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">giftees</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">long</span> <span class="n">netAmount</span><span class="p">();</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="n">map</span><span class="o">&lt;</span><span class="n">string</span><span class="p">,</span> <span class="n">person</span><span class="o">&gt;</span><span class="n">nameLookupTable</span><span class="p">;</span>
</span><span class='line'><span class="k">static</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">orderOfName</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">person</span><span class="o">::</span><span class="n">person</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">_name</span> <span class="o">=</span> <span class="s">&quot;no name&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">_amount</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">_initialAmount</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">giftees</span> <span class="o">=</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span><span class="p">{};</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">person</span><span class="o">::</span><span class="n">person</span><span class="p">(</span><span class="n">string</span> <span class="n">name</span><span class="p">,</span> <span class="kt">long</span> <span class="n">money</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">_name</span> <span class="o">=</span> <span class="n">name</span><span class="p">;</span>
</span><span class='line'>    <span class="n">_amount</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">_initialAmount</span> <span class="o">=</span> <span class="n">money</span><span class="p">;</span>
</span><span class='line'>    <span class="n">giftees</span> <span class="o">=</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span><span class="p">{};</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">person</span><span class="o">::</span><span class="n">give</span><span class="p">(</span><span class="n">person</span> <span class="o">&amp;</span><span class="n">receiver</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">giftees</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">receiver</span><span class="p">.</span><span class="n">_amount</span> <span class="o">+=</span> <span class="n">_initialAmount</span> <span class="o">/</span> <span class="n">giftees</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">person</span><span class="o">::</span><span class="n">send</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">list</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">list</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">_amount</span> <span class="o">=</span> <span class="n">_amount</span> <span class="o">+</span> <span class="n">_initialAmount</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="k">auto</span> <span class="n">person</span> <span class="o">:</span> <span class="n">list</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">give</span><span class="p">(</span><span class="n">nameLookupTable</span><span class="p">[</span><span class="n">person</span><span class="p">]);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">_amount</span> <span class="o">=</span> <span class="n">_amount</span> <span class="o">+</span> <span class="n">_initialAmount</span> <span class="o">%</span> <span class="n">list</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">person</span><span class="o">::</span><span class="n">setInitialAmount</span><span class="p">(</span><span class="k">const</span> <span class="kt">long</span> <span class="o">&amp;</span><span class="n">money</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">_initialAmount</span> <span class="o">=</span> <span class="n">money</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">long</span> <span class="n">person</span><span class="o">::</span><span class="n">netAmount</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">_amount</span> <span class="o">-</span> <span class="n">_initialAmount</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">ofstream</span> <span class="n">fout</span> <span class="p">(</span><span class="s">&quot;gift1.out&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">ifstream</span> <span class="n">fin</span> <span class="p">(</span><span class="s">&quot;gift1.in&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Line 1</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">sizeOfGroup</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">sizeOfGroup</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Line 2..NP+1</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">sizeOfGroup</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">string</span> <span class="n">name</span><span class="p">;</span>
</span><span class='line'>        <span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">name</span><span class="p">;</span>
</span><span class='line'>        <span class="n">person</span> <span class="n">aPerson</span> <span class="o">=</span> <span class="n">person</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>        <span class="n">nameLookupTable</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">nameLookupTable</span><span class="p">.</span><span class="n">end</span><span class="p">()</span> <span class="p">,</span><span class="n">std</span><span class="o">::</span><span class="n">pair</span><span class="o">&lt;</span><span class="n">string</span><span class="p">,</span> <span class="n">person</span><span class="o">&gt;</span><span class="p">{</span><span class="n">name</span><span class="p">,</span> <span class="n">aPerson</span><span class="p">});</span>
</span><span class='line'>        <span class="n">orderOfName</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">orderOfName</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">name</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Line NP+2..end</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">(</span><span class="o">!</span><span class="n">fin</span><span class="p">.</span><span class="n">eof</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">string</span> <span class="n">name</span><span class="p">;</span>
</span><span class='line'>        <span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">name</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">initialAmount</span><span class="p">,</span> <span class="n">numOfGiftees</span><span class="p">;</span>
</span><span class='line'>        <span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">initialAmount</span> <span class="o">&gt;&gt;</span> <span class="n">numOfGiftees</span><span class="p">;</span>
</span><span class='line'>        <span class="n">nameLookupTable</span><span class="p">[</span><span class="n">name</span><span class="p">].</span><span class="n">setInitialAmount</span><span class="p">(</span><span class="n">initialAmount</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">numOfGiftees</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">string</span> <span class="n">nameOfGiftee</span><span class="p">;</span>
</span><span class='line'>            <span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">nameOfGiftee</span><span class="p">;</span>
</span><span class='line'>            <span class="n">nameLookupTable</span><span class="p">[</span><span class="n">name</span><span class="p">].</span><span class="n">giftees</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">nameOfGiftee</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">nameLookupTable</span><span class="p">[</span><span class="n">name</span><span class="p">].</span><span class="n">send</span><span class="p">(</span><span class="n">nameLookupTable</span><span class="p">[</span><span class="n">name</span><span class="p">].</span><span class="n">giftees</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="n">string</span> <span class="n">name</span> <span class="o">:</span> <span class="n">orderOfName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">fout</span> <span class="o">&lt;&lt;</span> <span class="n">name</span> <span class="o">&lt;&lt;</span> <span class="s">&quot; &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">nameLookupTable</span><span class="p">[</span><span class="n">name</span><span class="p">].</span><span class="n">netAmount</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[friday]]></title>
    <link href="http://chinux23.github.com/blog/2014/12/18/friday/"/>
    <updated>2014-12-18T11:58:00-05:00</updated>
    <id>http://chinux23.github.com/blog/2014/12/18/friday</id>
    <content type="html"><![CDATA[<p>Problem: <a href="http://cerberus.delosent.com:791/usacoprob2?a=MeRsP6R2hJO&amp;S=friday">here</a></p>

<p>~~~ c++
/<em>
 ID: chinux1
 PROG: friday
 LANG: C++11
 </em>/</p>

<h1>include <iostream></h1>

<h1>include <fstream></h1>

<h1>include <string></h1>

<h1>include <vector></h1>

<h1>include <map></h1>

<p>using namespace std;</p>

<p>int getFebDays(int year);
bool isLeapYear(int year);</p>

<p>int getDaysForMonth(int year, int month)
{</p>

<pre><code>switch (month) {
    case 2:
        return getFebDays(year);
        break;
    case 4:
    case 6:
    case 11:
    case 9:
        return 30;
        break;
    default:
        return 31;
        break;
}
</code></pre>

<p>}</p>

<p>int getFebDays(int year)
{</p>

<pre><code>if (isLeapYear(year)) {
    return 29;
} else {
    return 28;
}
</code></pre>

<p>}</p>

<p>bool isLeapYear(int year)
{</p>

<pre><code>if (year % 100 == 0 &amp;&amp; year % 400 == 0) {
    return true;
} else if (year % 100 == 0){
    return false;
} else if (year % 4 == 0){
    return true;
} else {
    return false;
}
</code></pre>

<p>}</p>

<p>static vector<int> frequency = {0, 0, 0, 0, 0, 0, 0};</p>

<p>int main() {</p>

<pre><code>ofstream fout ("friday.out");
ifstream fin ("friday.in");

// Line 1
int N = 0;
fin &gt;&gt; N;

// Compute Date for Jan 1st 1900
int firstDayOfTheMonth = 0;

for (int i = 0; i &lt; N; i++) {
    int year = 1900 + i;

    for (int j = 1; j &lt;= 12; j++) {
        frequency[(firstDayOfTheMonth + 12) % 7]++;
        // Update to next month
        firstDayOfTheMonth = (firstDayOfTheMonth + getDaysForMonth(year, j)) % 7;

    }

}

for (int i = 5; i &lt; 12; i++) { // Starting from Saturday.
    fout &lt;&lt; frequency[i % 7];
    if (i == 11) {
        fout &lt;&lt; endl;
    } else
        fout &lt;&lt; " ";
}

return 0;
</code></pre>

<p>}
~~~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[beads]]></title>
    <link href="http://chinux23.github.com/blog/2014/12/18/beads/"/>
    <updated>2014-12-18T11:58:00-05:00</updated>
    <id>http://chinux23.github.com/blog/2014/12/18/beads</id>
    <content type="html"><![CDATA[<p>Problem: <a href="http://cerberus.delosent.com:791/usacoprob2?a=MeRsP6R2hJO&amp;S=beads">here</a></p>

<p>~~~c++
/<em>
 ID: chinux1
 PROG: beads
 LANG: C++11
 </em>/</p>

<h1>include <iostream></h1>

<h1>include <fstream></h1>

<h1>include <string></h1>

<h1>include <vector></h1>

<h1>include <map></h1>

<p>using namespace std;</p>

<p>int countBeadsBackward(string necklace, int index)
{</p>

<pre><code>if (index &gt; 0) {
    char firstColor = necklace[index-1];

    int i = index - 1;
    while (i &gt; 0 &amp;&amp; (firstColor == necklace[i] || necklace[i] == 'w' || firstColor == 'w')) {
        // first Color may be 'w', if so, we need to update
        if (firstColor == 'w' &amp;&amp; necklace[i] != 'w') {
            firstColor = necklace[i];
        }
        i--;
    }
    return index - 1 - i;
} else {
    return 0;
}
</code></pre>

<p>}</p>

<p>int countBeadsForward(string necklace, int index)
{</p>

<pre><code>if (index &lt; necklace.size()) {
    char firstColor = necklace[index];

    int i = index;
    while (i &lt; necklace.size() &amp;&amp; (firstColor == necklace[i] || necklace[i] == 'w' || firstColor == 'w')) {
        // first Color may be 'w', if so, we need to update
        if (firstColor == 'w' &amp;&amp; necklace[i] != 'w') {
            firstColor = necklace[i];
        }
        i++;
    }
    return i - index;
} else {
    return 0;
}
</code></pre>

<p>}</p>

<p>int countBeads(string necklace, int index)
{</p>

<pre><code>return countBeadsBackward(necklace, index) + countBeadsForward(necklace, index);
</code></pre>

<p>}</p>

<p>int maxNumberOfBeads(string doubleNecklace)
{</p>

<pre><code>int maxBeads = 0;
for (int i = 1; i &lt; doubleNecklace.length(); i++) {
    int num = countBeads(doubleNecklace, i);
    if (num &gt; maxBeads){
        maxBeads = num;
    }
}
return maxBeads;
</code></pre>

<p>}</p>

<p>int main() {</p>

<pre><code>ofstream fout ("beads.out");
ifstream fin ("beads.in");

// Line 1
int N = 0;
fin &gt;&gt; N;

// Line 2
string necklace;
fin &gt;&gt; necklace;

string doubleNecklace = necklace + necklace;

fout &lt;&lt; min(maxNumberOfBeads(doubleNecklace), N) &lt;&lt; endl;

return 0;
</code></pre>

<p>}
~~~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ride]]></title>
    <link href="http://chinux23.github.com/blog/2014/12/18/ride/"/>
    <updated>2014-12-18T11:08:00-05:00</updated>
    <id>http://chinux23.github.com/blog/2014/12/18/ride</id>
    <content type="html"><![CDATA[<p>Started my programming training.</p>

<p>Problem can be found here <a href="http://cerberus.delosent.com:791/usacoprob2?a=rIDTCBDPpmd&amp;S=ride">here</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> ID: chinux1</span>
</span><span class='line'><span class="cm"> PROG: ride</span>
</span><span class='line'><span class="cm"> LANG: C++11</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;iostream&gt;</span>
</span><span class='line'><span class="cp">#include &lt;fstream&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">unsigned</span> <span class="kt">long</span> <span class="n">mod47</span><span class="p">(</span><span class="n">string</span> <span class="n">name</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="kt">long</span> <span class="n">groupNumber</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">6</span> <span class="o">&amp;&amp;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">name</span><span class="p">.</span><span class="n">length</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">groupNumber</span> <span class="o">=</span> <span class="n">groupNumber</span> <span class="o">*</span> <span class="p">(</span><span class="n">name</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="mi">64</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">groupNumber</span> <span class="o">%</span> <span class="mi">47</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">ofstream</span> <span class="n">fout</span> <span class="p">(</span><span class="s">&quot;ride.out&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">ifstream</span> <span class="n">fin</span> <span class="p">(</span><span class="s">&quot;ride.in&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">string</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">;</span>
</span><span class='line'>    <span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">a</span> <span class="o">&gt;&gt;</span> <span class="n">b</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">mod47</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="o">==</span> <span class="n">mod47</span><span class="p">(</span><span class="n">b</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">fout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;GO&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">fout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;STAY&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build Clang with stdlibc++ 4.7 in Mac OS]]></title>
    <link href="http://chinux23.github.com/blog/2012/08/06/build-clang-with-stdlibc-plus-plus-4-dot-7/"/>
    <updated>2012-08-06T21:39:00-04:00</updated>
    <id>http://chinux23.github.com/blog/2012/08/06/build-clang-with-stdlibc-plus-plus-4-dot-7</id>
    <content type="html"><![CDATA[<p>Claim: I am no where close to a C++ expert, but just trying to learn things as life goes along. This post is for newbies like me trying to make clang work in C++11 mode with libstdc++.</p>

<h2>Motivation</h2>

<ul>
<li>C++11 has been out for a while now and I really want to get my hands on it to try it out.</li>
<li>Clang is a great Compiler (witht best-in-class quality and a lot of features).</li>
<li>The thing that I really enjoy is the AST that you can literally travese the source code like a &#8220;tree&#8221;. There are quite a few plugings that build on top of it</li>
<li>Vim Clang-Complete - quite cool, a really compiler generated complete, alot better than the ctags.</li>
<li>Syntax Highlight - i haven&#8217;t really tried that in Vim but looks possible and definitely interesting.</li>
</ul>


<p>However, in order to use clang with C++11, i either have to use libc++ or rebuild clang with libstdc++4.6/7. This is kinda pain for a newbie like me. Things that I have tried that didn&#8217;t work out:</p>

<ul>
<li>MacPort GCC4.7 - install with sudo port install gcc47</li>
<li>This only give you the gcc toolchains, not the llvm/clang.</li>
<li>MacPort Clang 3.2 - installs clang/llvm without gcc toolchains, that means I am back to the square one.</li>
<li>The post <a href="http://clang.llvm.org/get_started.html">http://clang.llvm.org/get_started.html</a> is bit advanced for newbie (at that time, i didn&#8217;t even know what is a GCC installation directory is. If you don&#8217;t know like me, keep reading).</li>
<li>And someone has similar experience <a href="http://lists.cs.uiuc.edu/pipermail/llvmdev/2012-April/048824.html">http://lists.cs.uiuc.edu/pipermail/llvmdev/2012-April/048824.html</a>.</li>
</ul>


<p>Unforutunately that post is for ubuntu, not Mac OS. Can&#8217;t just copy/paste! Oh yeah, forgot. <strong>&#8211;gcc-tool-chain</strong> configure flag doesn&#8217;t work for by the way. Maybe I should send the problem to cfe?
* After spending sometime trial and error, finally I am able to compile a C++11 code with clang with libstdc++ 4.7. I am not sure if this way is correct though, or if there is a better way? if someone knows, please comment below.</p>

<h2>Preparetion</h2>

<ul>
<li>Make sure Xcode commandline tools is installed. We need it to build gcc</li>
</ul>


<h2>Build GCC 4.7</h2>

<ul>
<li>Download GCC 4.7 from svn. (To keep things easy and concrete, I&#8217;ll give example path as i.e $HOME/Repo/gcc47)</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkdir $HOME/Repo/buildgcc47
</span><span class='line'>$ cd $HOME/Repo/buildgcc47
</span><span class='line'>$ ../gcc47/configure
</span><span class='line'>$ make -j 8
</span><span class='line'>$ sudo make DESTDIR=/usr/local install</span></code></pre></td></tr></table></div></figure>


<p>You need to watch for errors. How to solve error and successfully build gcc 4.7 is beyond the scope of this post, so you&#8217;ll have to figure it out. There are currently some dependency for gcc to build, namely mpr, gmp, and mpc?? ( i don&#8217;t remember the last one )
The &#8220;make -j 8&#8221; is to build gcc with 8 jobs (I have 4 cores with hyperthread, you can choose a number instead of <strong>8</strong> based on your computer configuration)
The last step will install your newly built gcc to /usr/local</p>

<h1>Build Clang</h1>

<ul>
<li>Download clang 3.2 from svn (i.e. $HOME/Repo/llvm)</li>
<li><strong>READ TO COMPLETE BEFORE TRYING</strong> build clang according to this guide <a href="url" title="http://clang.llvm.org/get_started.html#build">build clang page</a> will not give me correct libstdc++ 4.7 and header search. So read next bullet point. But you need to check out clang and compiler-rt as stated in the web.</li>
<li>So, before configure or build, modify the InitHeaderSearch.cpp in llvm/tools/clang/lib/Frontend/InitHeaderSearch.cpp. Find the FIXME and add the following around line 354:
<D-c></li>
</ul>


<figure class='code'><figcaption><span>[InitHeaderSearch.cpp] [++] </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>    <span class="k">case</span> <span class="n">llvm</span>:<span class="o">:</span><span class="n">Triple</span><span class="o">::</span><span class="n">x86</span><span class="o">:</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">llvm</span>:<span class="o">:</span><span class="n">Triple</span><span class="o">::</span><span class="n">x86_64</span><span class="o">:</span>
</span><span class='line'>      <span class="n">AddGnuCPlusPlusIncludePaths</span><span class="p">(</span><span class="s">&quot;/usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/../../../../include/c++/4.7.1&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="n">triple</span><span class="p">);</span>
</span><span class='line'>      <span class="n">AddGnuCPlusPlusIncludePaths</span><span class="p">(</span><span class="s">&quot;/usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/../../../../include/c++/4.7.1/x86_64-apple-darwin12.0.0&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="n">triple</span><span class="p">);</span>
</span><span class='line'>      <span class="n">AddGnuCPlusPlusIncludePaths</span><span class="p">(</span><span class="s">&quot;/usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/../../../../include/c++/4.7.1/backward&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="n">triple</span><span class="p">);</span>
</span><span class='line'>      <span class="n">AddGnuCPlusPlusIncludePaths</span><span class="p">(</span><span class="s">&quot;/usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/include&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="n">triple</span><span class="p">);</span>
</span><span class='line'>      <span class="n">AddGnuCPlusPlusIncludePaths</span><span class="p">(</span><span class="s">&quot;/usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/include-fixed&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="n">triple</span><span class="p">);</span>
</span><span class='line'>      <span class="n">AddGnuCPlusPlusIncludePaths</span><span class="p">(</span><span class="s">&quot;/usr/local/include&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">,</span> <span class="n">triple</span><span class="p">);</span>
</span><span class='line'>      <span class="n">AddGnuCPlusPlusIncludePaths</span><span class="p">(</span><span class="s">&quot;/usr/include&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="n">triple</span><span class="p">);</span>
</span><span class='line'>      <span class="n">AddGnuCPlusPlusIncludePaths</span><span class="p">(</span><span class="s">&quot;/System/Library/Frameworks&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="n">triple</span><span class="p">);</span>
</span><span class='line'>      <span class="n">AddGnuCPlusPlusIncludePaths</span><span class="p">(</span><span class="s">&quot;/Library/Frameworks&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="n">triple</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="cm">/*</span>
</span><span class='line'><span class="cm">      AddGnuCPlusPlusIncludePaths(&quot;/usr/include/c++/4.7.1&quot;,</span>
</span><span class='line'><span class="cm">                                  &quot;i686-apple-darwin12&quot;, &quot;&quot;, &quot;x86_64&quot;, triple);</span>
</span><span class='line'><span class="cm">      AddGnuCPlusPlusIncludePaths(&quot;/usr/include/c++/4.7.1&quot;,</span>
</span><span class='line'><span class="cm">                                  &quot;i686-apple-darwin12&quot;, &quot;&quot;, &quot;&quot;, triple);</span>
</span><span class='line'><span class="cm">      */</span>
</span><span class='line'>      <span class="k">break</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>now configure and build your clang</li>
<li>I installed it to /usr/local again (optional)</li>
</ul>


<h1>Set the Linked library in bash environment</h1>

<ul>
<li>after the compilation, if you use the newly clang</li>
</ul>


<figure class='code'><figcaption><span>[My Clang Include Path] []</span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>clang version 3.2 <span class="o">(</span>trunk 161295<span class="o">)</span>
</span><span class='line'>Target: x86_64-apple-darwin12.0.0
</span><span class='line'>Thread model: posix
</span><span class='line'> <span class="s2">&quot;/usr/local/bin/clang&quot;</span> -cc1 -triple x86_64-apple-macosx10.8.0 -fsyntax-only -disable-free -main-file-name null -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 134.7 -v -resource-dir /usr/local/bin/../lib/clang/3.2 -fmodule-cache-path /var/folders/1l/m5km38_d3lxbrvysgv6s42680000gn/T/clang-module-cache -fdeprecated-macro -fdebug-compilation-dir /Users/chen/Repository/llvm -ferror-limit 19 -fmessage-length 122 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime<span class="o">=</span>macosx-10.8.0 -fobjc-dispatch-method<span class="o">=</span>mixed -fobjc-default-synthesize-properties -fcxx-exceptions -fexceptions -fdiagnostics-show-option -fcolor-diagnostics -x c++ /dev/null
</span><span class='line'>clang -cc1 version 3.2 based upon LLVM 3.2svn default target x86_64-apple-darwin12.0.0
</span><span class='line'>ignoring nonexistent directory <span class="s2">&quot;/usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/../../../../include/c++/4.7.1/x86_64-apple-darwin12.0.0/backward&quot;</span>
</span><span class='line'>ignoring nonexistent directory <span class="s2">&quot;/usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/../../../../include/c++/4.7.1/backward/backward&quot;</span>
</span><span class='line'>ignoring nonexistent directory <span class="s2">&quot;/usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/include/backward&quot;</span>
</span><span class='line'>ignoring nonexistent directory <span class="s2">&quot;/usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/include-fixed/backward&quot;</span>
</span><span class='line'>ignoring nonexistent directory <span class="s2">&quot;/usr/local/include/backward&quot;</span>
</span><span class='line'>ignoring nonexistent directory <span class="s2">&quot;/usr/include/backward&quot;</span>
</span><span class='line'>ignoring nonexistent directory <span class="s2">&quot;/System/Library/Frameworks/backward&quot;</span>
</span><span class='line'>ignoring nonexistent directory <span class="s2">&quot;/Library/Frameworks/backward&quot;</span>
</span><span class='line'>ignoring duplicate directory <span class="s2">&quot;/usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/../../../../include/c++/4.7.1&quot;</span>
</span><span class='line'>ignoring duplicate directory <span class="s2">&quot;/usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/../../../../include/c++/4.7.1/x86_64-apple-darwin12.0.0&quot;</span>
</span><span class='line'>ignoring duplicate directory <span class="s2">&quot;/usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/../../../../include/c++/4.7.1/backward&quot;</span>
</span><span class='line'>ignoring duplicate directory <span class="s2">&quot;/usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/../../../../include/c++/4.7.1/backward&quot;</span>
</span><span class='line'>ignoring duplicate directory <span class="s2">&quot;/usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/include&quot;</span>
</span><span class='line'>ignoring duplicate directory <span class="s2">&quot;/usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/include-fixed&quot;</span>
</span><span class='line'>ignoring duplicate directory <span class="s2">&quot;/usr/local/include&quot;</span>
</span><span class='line'>ignoring duplicate directory <span class="s2">&quot;/usr/include&quot;</span>
</span><span class='line'>ignoring duplicate directory <span class="s2">&quot;/System/Library/Frameworks&quot;</span>
</span><span class='line'>ignoring duplicate directory <span class="s2">&quot;/Library/Frameworks&quot;</span>
</span><span class='line'>ignoring duplicate directory <span class="s2">&quot;/usr/local/include&quot;</span>
</span><span class='line'>ignoring duplicate directory <span class="s2">&quot;/usr/include&quot;</span>
</span><span class='line'><span class="c">#include &quot;...&quot; search starts here:</span>
</span><span class='line'><span class="c">#include &lt;...&gt; search starts here:</span>
</span><span class='line'> /usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/../../../../include/c++/4.7.1
</span><span class='line'> /usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/../../../../include/c++/4.7.1/backward
</span><span class='line'> /usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/../../../../include/c++/4.7.1/x86_64-apple-darwin12.0.0
</span><span class='line'> /usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/include
</span><span class='line'> /usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/include-fixed
</span><span class='line'> /usr/local/include
</span><span class='line'> /usr/include
</span><span class='line'> /System/Library/Frameworks
</span><span class='line'> /Library/Frameworks
</span><span class='line'> /usr/local/bin/../lib/clang/3.2/include
</span><span class='line'> /System/Library/Frameworks <span class="o">(</span>framework directory<span class="o">)</span>
</span><span class='line'> /Library/Frameworks <span class="o">(</span>framework directory<span class="o">)</span>
</span><span class='line'>End of search list.
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>if your header search path is different, go back and check to see where you did wrong</li>
<li>Now, if you try to compile, the linker will still linked to libstdc++ 4.2 that comes with Mac OS. To overcome that, i modify the bash_profile</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export PATH=/usr/local/bin:/usr/local/sbin:$PATH
</span><span class='line'>export LIBRARY_PATH=/usr/local/lib:/usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1:/usr/local/bin/../lib/gcc:/usr/local/bin/../lib/gcc/x86_64-apple-darwin12.0.0/4.7.1/../../../:/lib:/usr/lib</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Now, quite your terminal and restart. It should use the newly compiled clang with gcc 4.7 libstdc++

<h1>End Words</h1></li>
<li>Now you can try in your main.cpp. It should just compile</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include &lt;memory&gt;
</span><span class='line'>#include &lt;tuple&gt;</span></code></pre></td></tr></table></div></figure>


<ul>
<li>One last thing, I mean, I shouldn&#8217;t have to do all these just to get clang compiled with libstdc++. It allows me to set &#8211;gcc-tool-chain. That option supposed to work. Maybe it&#8217;s already working, i just need to modify the bash environment variables. I don&#8217;t know, i didn&#8217;t give it a try. If someone did try, or has a better way to do this, please post comments below</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HelloWorld]]></title>
    <link href="http://chinux23.github.com/blog/2012/08/06/helloworld/"/>
    <updated>2012-08-06T21:10:00-04:00</updated>
    <id>http://chinux23.github.com/blog/2012/08/06/helloworld</id>
    <content type="html"><![CDATA[<p>Welcome to my blog. This is a test post</p>
]]></content>
  </entry>
  
</feed>
